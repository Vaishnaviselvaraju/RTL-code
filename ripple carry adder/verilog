module ripplecarry_adder(a,b,cin,sum,cout);
	input [3:0]a,b;
	input cin;
	output [3:0]sum;
	output cout;
	wire w1,w2,w3;
	
	//module instantiation
	full_adder FA1(.a(a[0]),.b(b[0]),.c(cin),.sum(sum[0]),.carry(w1));
	full_adder FA2(.a(a[1]),.b(b[1]),.c(w1),.sum(sum[1]),.carry(w2));
	full_adder FA3(.a(a[2]),.b(b[2]),.c(w2),.sum(sum[2]),.carry(w3));
	full_adder FA4(.a(a[3]),.b(b[3]),.c(w3),.sum(sum[3]),.carry(cout));
endmodule

module full_adder(a,b,c,sum,carry);
	input a,b,c;
	output sum,carry;
  //using dataflow level
	assign sum = a^b^c;
	assign carry = a&b | b&c | c&a;
endmodule
